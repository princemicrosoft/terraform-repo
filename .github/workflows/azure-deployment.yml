name: 'Landing-zone-PID-PIA Azure Infra Provisioning'

on:
  workflow_dispatch:
    inputs:
      subscription:
        description: 'Subscription to deploy to'
        required: true
        default: 'subscription1'
        type: choice
        options:
          - subscription1
          - subscription2
permissions:
  id-token: write
  contents: write
  issues: write

jobs:
  terraform_plan:
    name: 'Terraform Validate and Plan'
    runs-on: ubuntu-latest
    env:
      ARM_CLIENT_ID: ${{ secrets[format('ARM_CLIENT_ID_{0}', github.event.inputs.subscription)] }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets[format('ARM_SUBSCRIPTION_ID_{0}', github.event.inputs.subscription)] }}

    defaults:
      run:
        working-directory: terraform/subscriptions/${{ github.event.inputs.subscription || 'subscription1' }}/TF_Files
    steps: 
      - name: Checkout code
        uses: actions/checkout@v4.2.2
        
      - name: 'Az CLI login'
        uses: azure/login@v2
        with:
          client-id: ${{ secrets[format('ARM_CLIENT_ID_{0}', github.event.inputs.subscription)] }}
          tenant-id: ${{ secrets[format('ARM_TENANT_ID_{0}', github.event.inputs.subscription)] }}
          subscription-id: ${{ secrets[format('ARM_SUBSCRIPTION_ID_{0}', github.event.inputs.subscription)] }}

      - name: Azure CLI script
        uses: azure/cli@v2
        with:
          azcliversion: latest
          inlineScript: |
            az account show

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2.0.3

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan -out=tfplan

  terraform_apply:
    name: 'Terraform Apply'
    runs-on: ubuntu-latest
    needs: terraform_plan
    env:
      ARM_CLIENT_ID: ${{ secrets[format('ARM_CLIENT_ID_{0}', github.event.inputs.subscription)] }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets[format('ARM_SUBSCRIPTION_ID_{0}', github.event.inputs.subscription)] }}

    environment: 
        name: approval
    defaults:
      run:
        working-directory: terraform/subscriptions/${{ github.event.inputs.subscription || 'subscription1' }}/TF_Files
    steps:
    
      - name: Checkout code
        uses: actions/checkout@v4.2.2

      - name: 'Az CLI login'
        uses: azure/login@v2
        with:
          client-id: ${{ secrets[format('ARM_CLIENT_ID_{0}', github.event.inputs.subscription)] }}
          tenant-id: ${{ secrets[format('ARM_TENANT_ID_{0}', github.event.inputs.subscription)] }}
          subscription-id: ${{ secrets[format('ARM_SUBSCRIPTION_ID_{0}', github.event.inputs.subscription)] }}

      - name: Azure CLI script
        uses: azure/cli@v2
        with:
          azcliversion: latest
          inlineScript: |
            az account show

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2.0.3

      - name: Terraform Init
        run: terraform init
        
      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false
